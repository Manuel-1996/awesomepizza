spring.application.name=awesomepizza

# PostgreSQL Configuration per i test Docker
spring.datasource.url=jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_DATABASE}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Configuration per i test
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true
spring.jpa.format-sql=true
spring.jpa.properties.hibernate.default_schema=${DB_SCHEMA}

# Database initialization - disabilitata per i test che usano create-drop
spring.sql.init.mode=never
spring.jpa.defer-datasource-initialization=true

# Server Configuration (porta diversa per evitare conflitti)
server.port=8082

# Disable favicon.ico requests
spring.favicon.enabled=false

# Logging configuration per i test Docker
logging.level.com.awesomepizza.ordersystem=WARN
logging.level.org.springframework.web.servlet.resource.ResourceHttpRequestHandler=WARN
logging.level.org.springframework.web=WARN
logging.level.org.hibernate=WARN
logging.level.com.zaxxer.hikari=WARN
logging.level.com.zaxxer.hikari.HikariConfig=WARN
logging.level.com.zaxxer.hikari.HikariDataSource=WARN
logging.level.com.zaxxer.hikari.pool.PoolBase=WARN

# HikariCP Configuration per i test Docker (pi√π conservativo)
spring.datasource.hikari.pool-name=AwesomePizzaTestPool
spring.datasource.hikari.minimum-idle=${HIKARI_MINIMUM_IDLE:1}
spring.datasource.hikari.maximum-pool-size=${HIKARI_MAXIMUM_POOL_SIZE:3}
spring.datasource.hikari.connection-timeout=${HIKARI_CONNECTION_TIMEOUT:20000}
spring.datasource.hikari.idle-timeout=${HIKARI_IDLE_TIMEOUT:300000}
spring.datasource.hikari.max-lifetime=${HIKARI_MAX_LIFETIME:900000}
spring.datasource.hikari.leak-detection-threshold=60000
spring.datasource.hikari.validation-timeout=5000